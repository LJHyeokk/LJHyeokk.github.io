I"b@<h2 id="react">React?🍓</h2>

<center class="notice--danger">🏳️ React란 javascript의 라이브러리이다.</center>

<h2 id="jsx">JSX?</h2>

<center class="notice--danger">🏳️ const hi =  &lt; 태그&gt;Hi&lt; 태그&gt;;</center>

<p style="color:black">위의 코드는 JS도 HTML도 아닌 javascript syntax extension라고 하는 JS의 확장버전이다.</p>
<p style="color:black">.js 파일에서 사용할 수 있고 별도의 컴파일 과정을 거쳐야지만 js문법으로 변환하여 브라우저가 인식할 수 있다.</p>
<p style="color:black">JSX는 어떤 태그라도 self closing tag가 가능함. ex) div /div =&gt; div / </p>
<p style="color:black">소괄호로 감싸주고 무조건 하나의 태그안에 중첩요소를 담아주어야한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Hello</span><span class="p">,</span> <span class="nx">world</span><span class="o">!&lt;</span><span class="sr">/h1&gt;, document.getElementById</span><span class="se">(</span><span class="sr">"root"</span><span class="se">))</span><span class="err">;
</span></code></pre></div></div>

<p style="color:black">DOM node에 추가되어 화면에 랜더링되려면 위와같이 작성해준다. JS의 appendchild 느낌인것 같다.</p>

<h2 id="component와-props">Component와 Props</h2>

<center class="notice--danger">🏳️ 1. Component</center>

<p style="color:black">component(컴포넌트)란 재사용 가능한 UI 단위이다. ( 함수랑 비슷하다고 생각하면 편함 )</p>

<center class="notice--danger">🏳️ 2. Props</center>

<p style="color:black">이러한 component(컴포넌트)의 매개변수 역할을 하는것을 Props라고 한다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">Welcome</span><span class="p">(</span><span class="nx">props</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Hello</span><span class="p">,</span> <span class="p">{</span><span class="nx">props</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="o">!&lt;</span><span class="sr">/h1&gt;</span><span class="err">;
</span><span class="p">}</span>

<span class="c1">// 2. App 컴포넌트 정의</span>
<span class="kd">function</span> <span class="nx">App</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
      <span class="o">&lt;</span><span class="nx">Welcome</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">wecoder</span><span class="dl">"</span> <span class="o">/&gt;</span>
      <span class="o">&lt;</span><span class="nx">Welcome</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">John</span><span class="dl">"</span> <span class="o">/&gt;</span>
      <span class="o">&lt;</span><span class="nx">Welcome</span> <span class="nx">name</span><span class="o">=</span><span class="dl">"</span><span class="s2">Sara</span><span class="dl">"</span> <span class="o">/&gt;</span>
    <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>

<span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">App</span> <span class="o">/&gt;</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">"</span><span class="s2">root</span><span class="dl">"</span><span class="p">));</span>
</code></pre></div></div>

<p style="color:black">Welcome이라는 컴포넌트를 App이라는 컴포넌트에서 사용하는 예시이다. 이렇게되면 App은 부모 Welcomde은 자식이라는 관계가 형성된다.</p>

<h2 id="component의-state">Component의 State</h2>

<center class="notice--danger">🏳️ State : 타입은 Object이고 화면에 보여줄 정보를 가지고 있는 컴포넌트의 상태값이다.</center>

<p style="color:black">props와 다른점이있다면 props는 부모에게서 받아야만 사용할 수 있다면 state는 컴포넌트 내에서도 정의하고 사용할 수 있다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">Button</span><span class="p">(</span><span class="nx">props</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">isClicked</span><span class="p">,</span> <span class="nx">setIsClicked</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">button</span> <span class="nx">className</span><span class="o">=</span><span class="dl">"</span><span class="s2">btn</span><span class="dl">"</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="nx">setIsClicked</span><span class="p">(</span><span class="o">!</span><span class="nx">isClicked</span><span class="p">)}</span><span class="o">&gt;</span>
      <span class="p">{</span><span class="nx">isClicked</span> <span class="p">?</span> <span class="dl">"</span><span class="s2">좋아요</span><span class="dl">"</span> <span class="p">:</span> <span class="dl">"</span><span class="s2">싫어요</span><span class="dl">"</span><span class="p">}</span>
    <span class="o">&lt;</span><span class="sr">/button</span><span class="err">&gt;
</span>  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p style="color:black">버튼을 누를때마다 값이 바뀌는 간단한 예시. </p>

<h2 id="리액트를-왜-사용하는가">리액트를 왜 사용하는가?</h2>

<blockquote>
  <ol>
    <li>모바일앱으로 발행이 쉽다.</li>
    <li>앱 처럼 뛰어난 UX</li>
    <li>그냥 웹사이트보다 비즈니스적으로 강점이있다.</li>
  </ol>
</blockquote>

<p><br /></p>

<p>자 이제 시작해보자.</p>

<ol>
  <li>node.js를 최신버전으로 깔아준다.</li>
  <li>폴더를 만들고 vscode로 킨 후 ➡️ 터미널창에 ‘npx create-react-app <프로젝트 이름="">' 을 친다.</프로젝트></li>
  <li>터미널에 ‘npm start’ 입력 후 예시 페이지가 나오는지 확인</li>
</ol>

<p><br /></p>

<hr />

<p><br /></p>

<center><p style="color:#4c7a8a">기초 설명🚩</p></center>

<p>‘node.js’를 설치한 이유 ➡️ create react app을 사용하기 위해 -&gt; node.js를 깔면 npm이라는 툴을 사용가능</p>

<p><br /></p>

<p>public-&gt;index.html (메인페이지 ) ➡️ ‘src-&gt;app.js’를 끌어다 사용하고있다.</p>

<p><br /></p>

<p>package.json ➡️ 설치한 라이브러리 목록</p>

<p><br /></p>

<p>node_modules ➡️ 라이브러리 집합소</p>

<p><br /></p>

<p>public ➡️ static 파일 보관함</p>

<p><br /></p>

<p>src ➡️소스코드 보관함</p>

<p><br /></p>

<p>src-index.js ➡️ app.js와 메인페이지를 이어줌 root</p>

<p><br /></p>

<p>App.js에서 return안에 쓰는 문법은 HTML처럼 생긴 JSX이다.</p>

<p><br /></p>

<p>데이터 바인딩은 { }을 사용하여 편하게 사용</p>

<hr />

<p><br /></p>

<center><p style="color:#4c7a8a">기초 문법🚩</p></center>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">이름</span> <span class="k">from</span> <span class="s">'이미지 경로'</span>

<span class="o">&lt;</span><span class="n">img</span> <span class="n">src</span><span class="o">=</span><span class="p">{</span> <span class="n">이름</span> <span class="p">}</span> <span class="o">/&gt;</span>
</code></pre></div></div>

<p>이미지 업로드하기</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="n">div</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span> <span class="p">{</span> <span class="n">color</span> <span class="p">:</span> <span class="s">'black'</span><span class="p">,</span> <span class="n">fontSize</span> <span class="p">:</span> <span class="s">'30px'</span> <span class="p">}</span> <span class="p">}</span><span class="o">&gt;</span><span class="n">asd</span><span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>style 사용법 ‘-‘을 사용불가하니 카멜형식으로 사용</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">React</span><span class="p">,</span> <span class="p">{</span> <span class="n">useState</span> <span class="p">}</span> <span class="k">from</span> <span class="s">"react"</span><span class="p">;</span> <span class="o">//</span> <span class="n">리액트에있는</span> <span class="n">내장함수를</span> <span class="n">쓰겠다</span><span class="p">.</span> <span class="n">state는</span> <span class="n">변수대신</span> <span class="n">쓰는</span> <span class="n">데이터</span> <span class="n">공간</span>

<span class="n">let</span> <span class="p">[</span><span class="n">title</span><span class="p">,</span> <span class="n">titleModify</span><span class="p">]</span> <span class="o">=</span> <span class="n">useState</span><span class="p">([</span><span class="s">"신라면 맛있어"</span><span class="p">,</span> <span class="s">'우유랑 같이 먹어야함'</span><span class="p">]);</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span> <span class="n">title</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>  <span class="o">//</span> <span class="s">'신라면 맛잇어'</span>
</code></pre></div></div>

<p>ustState 사용 이유 -&gt; app처럼 사용하기위해, 새로고침없이 재랜더링됨, 자주바뀌는 중요한 데이터를 쓰자.</p>

<p>useState함수 사용시 [‘신라면 ..’, 함수] 이렇게 나옴 -&gt; 이것을 신문법으로 a변수에는 ‘신라면…’ b변수에는 함수를 넣음</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">/*</span> <span class="n">eslint</span><span class="o">-</span><span class="n">disable</span><span class="o">*/</span>
</code></pre></div></div>

<p>warning을 보기싫을때 쓰면 없애줌</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">let</span> <span class="p">[</span><span class="n">like</span><span class="p">,</span> <span class="n">likeModify</span><span class="p">]</span> <span class="o">=</span> <span class="n">useState</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

<span class="o">&lt;</span><span class="n">span</span> <span class="n">className</span><span class="o">=</span><span class="s">'like'</span> <span class="n">onClick</span><span class="o">=</span><span class="p">{</span> <span class="p">()</span><span class="o">=&gt;</span><span class="p">{</span> <span class="n">likeModify</span><span class="p">(</span> <span class="n">like</span><span class="o">+</span><span class="mi">1</span> <span class="p">)</span> <span class="p">}</span> <span class="p">}</span><span class="o">&gt;</span><span class="err">🍓</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">{</span><span class="n">like</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">//</span> <span class="n">딸기모양</span> <span class="n">클릭시마다</span> <span class="n">숫자가</span> <span class="n">올라감</span>
</code></pre></div></div>

<p>onClick은 {}을 사용하고, 그안은 항상 함수여야한다. 그리고 state값을 바꾸고 싶을땐 수정함수를 사용한다.</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">function</span> <span class="n">제목바꾸기</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">var</span> <span class="n">newArray</span> <span class="o">=</span> <span class="p">[...</span><span class="n">title</span><span class="p">];</span>    <span class="o">//</span> <span class="n">var</span> <span class="n">newArray</span> <span class="o">=</span> <span class="n">title</span> <span class="p">(</span><span class="n">X</span><span class="p">)</span>
    <span class="n">newArray</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">'블랙 신라면'</span><span class="p">;</span>
    <span class="n">titleModify</span><span class="p">(</span> <span class="n">newArray</span> <span class="p">);</span>
  <span class="p">}</span>

  <span class="o">&lt;</span><span class="n">button</span> <span class="n">onClick</span><span class="o">=</span><span class="p">{</span> <span class="n">제목바꾸기</span> <span class="p">}</span><span class="o">&gt;</span><span class="n">바꿈</span><span class="o">&lt;/</span><span class="n">button</span><span class="o">&gt;</span> <span class="o">//</span> <span class="n">제목바꾸기</span><span class="p">()</span> <span class="p">(</span><span class="n">X</span><span class="p">)</span>
</code></pre></div></div>

<p>변수에 state를 담을때 그냥 담으면 값을 공유하는 것이다. 즉 원래의 값도 바뀐다. […]을 사용하자</p>

<p>함수를 함수()로 호출하면 바로 실행이므로 클릭시에만 호출할 수 있게 ()를 빼주자.</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">function</span> <span class="n">Nav</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="n">div</span> <span class="n">className</span><span class="o">=</span><span class="s">"black-nav"</span><span class="o">&gt;</span>
       <span class="o">&lt;</span><span class="n">div</span><span class="o">&gt;</span><span class="n">LJH</span><span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
    <span class="o">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
  <span class="p">)</span>
<span class="p">}</span>

<span class="n">function</span> <span class="n">App</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span>
    	<span class="o">&lt;</span><span class="n">Nav</span><span class="o">&gt;&lt;/</span><span class="n">Nav</span><span class="o">&gt;</span>
    <span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Component 사용하기</p>

<ol>
  <li>이름은 대문자로 쓰기</li>
  <li>하나의 div로 묶어주기 // &lt;&gt;&lt;/&gt;을 써도됨</li>
  <li>App 컴포넌트와 같은 위치로 해주기</li>
</ol>

<p>이렇게되면 App은 부모컴포넌트 nav는 자식컴포넌트가 된다.</p>

<p>자주바뀌는 것들에 사용하자</p>
:ET