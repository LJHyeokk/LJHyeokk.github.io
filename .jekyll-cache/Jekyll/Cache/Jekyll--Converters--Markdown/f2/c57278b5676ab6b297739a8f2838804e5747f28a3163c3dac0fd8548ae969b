I"*!<h2 id="json-">JSON? 💯</h2>

<p>JSON이 무엇인지 알기 위해선 약간의 배경지식이 필요하다.</p>

<center class="notice--info">AJAX(Asynchronous JavaScript And XML), XHR(XMLHttpRequest) 등과 같이 XML이란 단어가 보이는데 XML이란 HTML과 같은 markup언어 중에 하나이다.(태그를 이용해 데이터 나타냄)</center>

<center class="notice--danger">이러한 markup언어를 통해 서버와 데이터를 주고 받을 수 있는데 예전에는 XML이 주였다면 지금은 JSON(JavaScript Object Notation)을 많이 사용한다고 한다. 이유는 XML은 불필요한 태그가 많이 들어가서 파일이 커지고 가독성도 좋지 않기 때문이다.</center>

<center><p style="color: seagreen">요약 : 클라이언트와 서버가 통신을 하기위해 markup언어중 하나인 XML을 많이 썼는데 지금은 JSON을 사용한다.</p></center>
<p><br /></p>
<center>이제 JSON이 무엇인지 알아보자</center>
<p><br /></p>

<blockquote>
  <p>JSON이란</p>
</blockquote>

<ul>
  <li>브라우저 뿐만아니라 모바일에서 서버와 데이터를 주고받을때, 또 통신목적이아닌 Object를 파일시스템에 저장할때도 사용됨</li>
  <li>텍스트를 기반으로하여 만들었기에 가볍고 key와 value로 구성되어 읽기 쉽다.</li>
  <li>주로 데이터를 직렬화하여 서버와 주고받을때 사용함</li>
  <li>대부분의 프로그램언어나 플랫폼에서도 사용할 수 있다.</li>
</ul>

<p><br /></p>
<center><p style="color:seagreen">요약 : 텍스트를 기반으로하여 key와 value로 구성되었고 서버와 통신을 하기위한 markup언어이다.</p></center>
<p><br /></p>
<hr />

<h3 id="json-사용방법">JSON 사용방법</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">interface</span> <span class="nx">JSON</span> <span class="p">{</span>
  <span class="nx">parse</span><span class="p">(</span>
    <span class="nx">text</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span>
    <span class="nx">reviver</span><span class="p">?:</span> <span class="p">(</span><span class="k">this</span><span class="p">:</span> <span class="nx">any</span><span class="p">,</span> <span class="nx">key</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="nx">value</span><span class="p">:</span> <span class="nx">any</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">any</span>
  <span class="p">):</span> <span class="nx">any</span><span class="p">;</span> <span class="c1">//오브젝트로</span>

  <span class="nx">stringify</span><span class="p">(</span>
    <span class="nx">value</span><span class="p">:</span> <span class="nx">any</span><span class="p">,</span>
    <span class="nx">replacer</span><span class="p">?:</span> <span class="p">(</span><span class="k">this</span><span class="p">:</span> <span class="nx">any</span><span class="p">,</span> <span class="nx">key</span><span class="p">:</span> <span class="nx">string</span><span class="p">,</span> <span class="nx">value</span><span class="p">:</span> <span class="nx">any</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">any</span><span class="p">,</span>
    <span class="nx">space</span><span class="p">?:</span> <span class="nx">string</span> <span class="o">|</span> <span class="nx">number</span>
  <span class="p">):</span> <span class="nx">string</span><span class="p">;</span> <span class="c1">//스트링으로</span>

  <span class="nx">stringify</span><span class="p">(</span>
    <span class="nx">value</span><span class="p">:</span> <span class="nx">any</span><span class="p">,</span>
    <span class="nx">replacer</span><span class="p">?:</span> <span class="p">(</span><span class="nx">number</span> <span class="o">|</span> <span class="nx">string</span><span class="p">)[]</span> <span class="o">|</span> <span class="kc">null</span><span class="p">,</span>
    <span class="nx">space</span><span class="p">?:</span> <span class="nx">string</span> <span class="o">|</span> <span class="nx">number</span>
  <span class="p">):</span> <span class="nx">string</span><span class="p">;</span> <span class="c1">//스트링으로</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>
<center>JSON의 API는 parse, stringify 이렇게 두가지가 있는데 stringify처럼 같은이름으로 매개변수가 다르게 정의된것을 오버로딩(overLoading)이라고 한다.</center>
<p><br /></p>

<h4 id="1-object-to-json">1. Object to JSON</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">person</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">jh</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span>
  <span class="na">tall</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
  <span class="na">day</span><span class="p">:</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(),</span>
  <span class="nx">canWhat</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="s2"> can eat rice`</span><span class="p">);</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">person</span><span class="p">);</span> <span class="c1">// {"name":"jh","age":28,"tall":null,"day":"대충시간들"}</span>

<span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">person</span><span class="p">,</span> <span class="p">[</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">]);</span> <span class="c1">// {"name":"jh"}</span>

<span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">person</span><span class="p">,</span> <span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">);</span>
<span class="p">});</span> <span class="c1">// 한번해보셈</span>
</code></pre></div></div>

<p><br /></p>
<center>JSON은 함수나 심벌은 나타내지않는다. 또한 콜백함수를 활용하여 원하는것만 변환가능</center>
<p><br /></p>

<h4 id="2-json-to-object">2. JSON to Object</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">person</span><span class="p">,</span> <span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">key</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">day</span><span class="dl">"</span> <span class="p">?</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">:</span> <span class="nx">value</span><span class="p">;</span>
<span class="p">});</span>
</code></pre></div></div>

<p><br /></p>
<center>다시 Object 형태로 바꿔준다.</center>
<p><br /></p>

<p>유용한사이트 : <a href="http://www.jsondiff.com/">JSON파일 비교</a>
<a href="https://jsonformatter.curiousconcept.com/#">JSON파일 유효한가</a></p>
:ET