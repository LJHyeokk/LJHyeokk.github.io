I"N<h2 id="typescript-">Typescript? 🔑</h2>

<center class="notice--danger">Typescript : 타입스크립트는 자바스크립트에 타입을 부여한 언어이다.</center>

<ul>
  <li>
    <p>MS에 의해 개발/관리되고 있는 오픈소스 프로그래밍 언어이다.</p>
  </li>
  <li>
    <p>대규모 애플리케이션을 개발하는 데 자바스크립트가 어렵고 불편하다는 불만에 대응하기 위해 개발되었다.</p>
  </li>
  <li>
    <p>TypeScript는 ES5의 Superset이므로 기존의 자바스크립트(ES5) 문법을 그대로 사용할 수 있다.</p>
  </li>
  <li>
    <p>ES6의 새로운 기능들을 사용하기 위해 Babel과 같은 별도 트랜스파일러(Transpiler)를 사용하지 않아도 ES6의 새로운 기능을 기존의 자바스크립트 엔진(현재의 브라우저 또는 Node.js)에서 실행할 수 있다.</p>
  </li>
</ul>

<p><br /></p>

<h3 id="js-vs-ts">JS vs TS</h3>

<ul>
  <li>
    <p>JS는 5 - ‘3’과 같은 Dynamic Typing이 가능하다.</p>
  </li>
  <li>
    <p>TS는 ERROR MESSEGE가 정확하다.</p>
  </li>
</ul>

<p><br /></p>

<h3 id="설치">설치</h3>

<ul>
  <li>nodejs 설치</li>
  <li>npm install typescript</li>
  <li>tsconfig.json 파일 만들기(컴파일시 옵션설정하기 위함)</li>
</ul>

<blockquote>
  <p>tsconfig.json</p>
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>
  <span class="s">"compilerOptions"</span><span class="o">:</span> <span class="o">{</span>
    <span class="s">"target"</span><span class="o">:</span> <span class="s">"es5"</span><span class="o">,</span>
    <span class="s">"module"</span><span class="o">:</span> <span class="s">"commonjs"</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>브라우저는 JS만 읽을 수 있기때문에 TS -&gt; JS로 변환시켜 줘야함( 터미널에 <code class="language-plaintext highlighter-rouge">tsc -w</code>)</li>
</ul>

<p><br /></p>

<h3 id="문법">문법</h3>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">a</span><span class="p">:</span> <span class="kr">string</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">kk</span><span class="dl">'</span><span class="p">;</span>

<span class="nx">a</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span> <span class="c1">// ERROR</span>

<span class="dl">'</span><span class="s1">number</span><span class="dl">'</span> <span class="nx">형식은</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span> <span class="nx">형식에</span> <span class="nx">할당할</span> <span class="nx">수</span> <span class="nx">없습니다</span><span class="p">.</span>
</code></pre></div></div>

<p>TS는 변수를 선언할때 타입을 지정해준다.</p>

<p>지정해준타입이 아닌 다른 타입을 넣으면 ERROR를 발생시킨다.</p>

<p>(string, number, boolean, null, undefiend, bigint, [], {}, string[], { name? : string } 등등)</p>

<p>Union Type이라고 해서 <code class="language-plaintext highlighter-rouge">let a: string[] | number = 123;</code> 이런식으로 타입을 여러개 받을수도있다.</p>

<p>Tuple Type <code class="language-plaintext highlighter-rouge">[number, boolean]</code></p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">type</span> <span class="nx">MyType</span> <span class="o">=</span> <span class="kr">string</span><span class="p">[]</span> <span class="o">|</span> <span class="p">{</span> <span class="na">name</span><span class="p">:</span> <span class="kr">string</span> <span class="p">};</span>

<span class="kd">let</span> <span class="nx">a</span><span class="p">:</span> <span class="nx">MyType</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">abc</span><span class="dl">'</span><span class="p">];</span>
</code></pre></div></div>

<p>타입선언이 길어지면 위와 같이 타입을 변수에 넣어서 사용하여도 된다.( 대문자로 사용하자. )</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">abc</span><span class="p">(</span><span class="nx">x</span><span class="p">:</span> <span class="kr">number</span><span class="p">):</span> <span class="kr">number</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">abc</span><span class="p">(</span><span class="dl">'</span><span class="s1">123</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// ERROR</span>
</code></pre></div></div>

<p>함수에도 타입선언을 해줄 수 있다.</p>

<p>arg를 숫자타입으로 지정해두었고, return 부분도 숫자타입으로 선언해주었다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">type</span> <span class="nx">Member</span> <span class="o">=</span> <span class="p">{</span>
  <span class="p">[</span><span class="na">key</span><span class="p">:</span> <span class="kr">string</span><span class="p">]:</span> <span class="kr">string</span><span class="p">;</span>
<span class="p">};</span>

<span class="kd">let</span> <span class="nx">a</span><span class="p">:</span> <span class="nx">Member</span> <span class="o">=</span> <span class="p">{</span> <span class="na">abcdefg</span><span class="p">:</span> <span class="dl">'</span><span class="s1">asd</span><span class="dl">'</span> <span class="p">};</span>
</code></pre></div></div>

<p>string타입의 모든 키는 키값으로 string타입을 가지게 선언할 수 있다.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span>
</code></pre></div></div>
:ET