I"N<h2 id="http-">HTTP? 🍪</h2>

<center class="notice--danger">  HTTP : 인터넷에서 웹서버와 사용자 컴퓨터에 설치된 웹브라우저 사이에 문서를 전송하기 위한 통신규약이다.</center>

<p>HTTP서버는 80번 포트에서 서비스 대기중이며 클라이언트가 TCP 80 포트를 사용해 연결하면 서버는 요청에 응답하여 자료를 전달한다.</p>

<h2 id="https-">HTTPS? 🍪</h2>

<center class="notice--danger">  HTTPS : 기존 HTTP에 Secure Soket을 추가한 것이다.</center>

<p>데이터를 주고받는 과정에 ‘보안’요소가 추가되었다.</p>

<p>즉, HTTPS를 사용하면 서버와 클라이언트 사이의 모든 통신내용이 암호화 된다.</p>

<p>이러한 큰 장점이 있지만 보안요소가 추가된만큼 처리속도가 늦어질 수 밖에 없는데</p>

<p>요즘엔 네트워크상태가 우수하기에 HTTP, HTTPS의 속도차이를 체감하기 어렵다.</p>

<p><br /></p>

<p>마켓팅 측면에서도 이득이다.</p>

<p>대부분의 검색사이트에서 같은 내용을 검색하더라도 HTTP 사이트보다 HTTPS사이트가 상위노출되어 우선검색된다.</p>

<p>(구글은 HTTPS를 장려하기 위해 HTTPS를 사용하면 검색순위결과에 가산점을 준다고 발표했다.(검색엔진최적화 : SEO))</p>

<p><br /></p>
<hr />

<p><br /></p>

<h3 id="dns">DNS</h3>

<p><br /></p>
<center><img src="../images/2021-10-27-first/http-1.png" alt="http-1" /></center>
<center>순서</center>
<p><br /></p>

<ol>
  <li>
    <p>등록자가 등록대행자를 통해 등록소에서 도메인을 산다.</p>
  </li>
  <li>
    <p>route53을 통해 도메인네임서버를 임대받는다.(example.com의 주소는 92.231.123.2이다라고 저장시킴)</p>
  </li>
  <li>
    <p>등록소가 갖고있는 도메인네임서버를 통해 (example.com)이 저장되어있는 곳은 Route53이다라고 기록함 ( 등록 완료 )</p>
  </li>
  <li>
    <p>클라이언트가 example.com을 주소창에 치면, 인터넷이 연결되어있다면 1,1,1,1이라는 DNS SERVER가 물어물어물어봐서 Routh 53을 통해 IP를 알아내어 전달한다.</p>
  </li>
</ol>

<p><br /></p>
<hr />

<p><br /></p>

<h3 id="route-53">Route 53</h3>

<center class="notice--danger">  Route 53 : 도메인을 살수 있게해주는 등록대행자 역할을 하며 도메인네임서버를 임대해주는 AWS의 서비스이다.</center>

<ul>
  <li>Route53으로 도메인 구입</li>
</ul>

<ol>
  <li>
    <p>Route53의 Registered domins클릭 ( register domin : 도메인 만들기 , transfer domin : 도메인 이전)</p>
  </li>
  <li>
    <p>검색창에 원하는 도메인네임을 친다.</p>
  </li>
  <li>
    <p>원하는것을 고른뒤 Registrant Contact에 정보 기입</p>
  </li>
  <li>
    <p>정보확인후 도메인등록이 완료된다. ( 며칠 걸림 )</p>
  </li>
  <li>
    <p>hosted zode으로간다.</p>
  </li>
  <li>
    <p>Route 53을 통해 도메인을 샀다면 이미 도메인네임서버가 만들어져있는것을 볼 수 있다.</p>
  </li>
  <li>
    <p>ip등록을 위해 create recode set을 누른다( type A : iPv4의 주소와 연결하고 싶을때, type CNAME : 도메인네임과 도메인네임을 연결하고 싶을때)</p>
  </li>
  <li>
    <p>TTL(Time to live) : DNS 값을 전송했을 경우, 결과값이 캐시에 저장되는 시간을 의미한다. IP주소나 메일 서버를 자주 변경하지 않을 경우에는 가급적 TTL값을 큰 값으로 설정할 것을 권장함(TTL 값이 작으면 cache DNS에서 저장하고 있는 정보가 빨리 사라진다는 뜻)</p>
  </li>
  <li>
    <p>value에 IP적고 create 클릭 ( dig +trace를 통해 잘 셋팅되었는지 확인 )</p>
  </li>
  <li>
    <p>완료</p>
  </li>
</ol>

<p><br /></p>
<hr />

<p><br /></p>

<h3 id="acmaws-certification-manager">ACM(AWS Certification Manager)</h3>

<center class="notice--danger">  ACM : AWS에서 제공하는 웹 사이트 및 애플리케이션을 보호하는 퍼블릭 및 프라이빗 SSL/TLS 인증서와 키를 생성, 저장 및 갱신하는 과정을 처리하는 서비스 (ELB(Elastic LoadBalancer) 또는 Cloudfront에서 HTTPS 통신을 할때 사용하는무료 SSL인증서)</center>

<ul>
  <li>
    <p>Certification Manager -&gt; 인증서 프로비저닝 -&gt; 공인인증서요청 클릭</p>
  </li>
  <li>
    <p>도메인이름 넣기</p>
  </li>
  <li>
    <p>DNS 검증</p>
  </li>
  <li>
    <p>각 도메인마다 레코드를 생성하여 인증한다</p>
  </li>
</ul>

<center><img src="../images/2021-10-27-first/http-2.png" alt="http-2" /></center>
<center>인증</center>
<p><br /></p>

<ul>
  <li>route 53에서 인증서 만들어진거 확인가능</li>
</ul>

<p><br /></p>
<hr />

<p><br /></p>

<h3 id="aws-elbelastic-load-balancer">AWS ELB(Elastic Load Balancer)</h3>

<center class="notice--danger">  ELB : 서버에 가해지는 트래픽을 여러대의 서버에게 균등하게 분산시켜주는 역할을 한다.</center>

<p>서버가 하나일 때 트래픽이 적으면 서버는 무사히 응답을 한다. 하지만 트래픽이 서버 한개로는 감당할 수 없는 양이 되는 순간 서버는 다운될 것이고, 서비스 또한 작동을 멈출 것이다.</p>

<p>이러한 문제를 해결하기 위해서는 크게 두 가지 방법이 있다.</p>

<p>서버의 인스턴스 성능을 올리는 ‘스케일-업(Scale-up)’ 과 서버를 여러대로 나눠서 트래픽을 처리하는 ‘스케일-아웃(Scale-out)’ 방식이 있다.</p>

<p>스케일-아웃이 로드밸런스의 역할이다.</p>

<p>그리고 로드 밸런서는 지속적으로 IP주소가 바뀌기 떄문에 도메인 기반으로 사용해야 한다는 특징이 있다.</p>

<ol>
  <li>
    <p>로드밸런스 생성 ( http/https )</p>
  </li>
  <li>
    <p>이름적고 리스너 추가 ( htts로 설정하면 443 포트로 만들어질것임 )</p>
  </li>
  <li>
    <p>가용영역은 모두다 설정해줘도 무방</p>
  </li>
  <li>
    <p>ACM인증으로 선택</p>
  </li>
  <li>
    <p>새 보안그룹 생성</p>
  </li>
  <li>
    <p>로드밸런스를 적용할 인스턴스 추가</p>
  </li>
  <li>
    <p>완료</p>
  </li>
</ol>

<p><br /></p>
<hr />

<p><br /></p>

<h3 id="도메인연결-및-ec2인증서-연결">도메인연결 및 EC2인증서 연결</h3>

<ol>
  <li>
    <p>route 53에서 호스팅된 도메인에서 별칭을 누르고 만들어진 로드밸런스를 적용시킨다.</p>
  </li>
  <li>
    <p>EC2 인스턴스에서 작업을 선택해 보안그룹을 만들어준것으로 변경한다.(추가)</p>
  </li>
</ol>

<p><br /></p>
<hr />

<p><br /></p>

<h3 id="삽질한것">삽질한것</h3>

<p>ELB를 만들때 Target groups을 만들때 Health check를 하지 않았었다..</p>

<p><br /></p>
<center><img src="../images/2021-10-27-first/aws-8.png" alt="aws-8" /></center>
<p><br /></p>

<p>Health check란 ELB가 일부러 트래픽을 발생시켜 해당 인스턴스가 살아있는지 확인하는 것이다.</p>

<p>아직 Health check를 할만한 코드가 없기에 우선은 에러를 뜨는게 정상인것으로 해놓았다.</p>

<p>참고</p>

<p>https://www.inflearn.com/course/aws-%EC%95%84%EB%A7%88%EC%A1%B4-%EC%9B%B9%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B0%80%EC%9E%85%EB%B6%80%ED%84%B0-%ED%99%9C%EC%9A%A9%EA%B9%8C%EC%A7%80/lecture/2912?tab=curriculum</p>

<p>https://www.youtube.com/watch?v=Cjq4Cxoauvc</p>
:ET