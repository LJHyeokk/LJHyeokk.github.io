I" 8<h2 id="usestate">useState?🍓</h2>

<center class="notice--danger">useState : useState함수를 호출하면 변수와 그 변수를 set해주는 함수를 return 한다</center>

<center>useState를 통해 만든 변수는 값이 변경이 되면 랜더링되며 새롭게 써진다.</center>
<p><br /></p>
<center>이때 변수의 값을 변경하기 위해 사용되는 함수가 setter함수이다.</center>

<p><br /></p>

<h3 id="사용방법">사용방법🍓</h3>

<blockquote>
  <p>ex) 잘못된 사용법</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="p">[</span><span class="nx">like</span><span class="p">,</span> <span class="nx">setlike</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="dl">"</span><span class="s2">🤍</span><span class="dl">"</span><span class="p">);</span>

<span class="p">{</span>
  <span class="o">&lt;</span><span class="nx">div</span>
    <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">like</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">하트</span><span class="dl">"</span><span class="p">;</span>
    <span class="p">}}</span>
  <span class="o">&gt;</span>
    <span class="p">{</span><span class="nx">like</span><span class="p">}</span>
  <span class="o">&lt;</span><span class="sr">/div&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>이것은 잘못된 예시이다. 실제로 🤍를 클릭한다고 해도 like변수는 ‘하트’로 변하지않는다. 오직 setlike함수를 통해 변경될 수 있다.</p>

<blockquote>
  <p>ex) 올바른 사용법</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="p">[</span><span class="nx">like</span><span class="p">,</span> <span class="nx">setlike</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">(</span><span class="dl">"</span><span class="s2">🤍</span><span class="dl">"</span><span class="p">);</span>

<span class="p">{</span>
  <span class="o">&lt;</span><span class="nx">div</span>
    <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">setlike</span><span class="p">(</span><span class="dl">"</span><span class="s2">하트</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">}}</span>
  <span class="o">&gt;</span>
    <span class="p">{</span><span class="nx">like</span><span class="p">}</span>
  <span class="o">&lt;</span><span class="sr">/div&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>올바른 예시. 🤍를 누르면 ‘하트’ 라는 텍스트로 변경된다.</p>

<p><br /></p>
<hr />

<h3 id="참조타입일때">참조타입일때🍓</h3>

<blockquote>
  <p>ex) 참조타입(배열)의 잘못된 사용법</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="p">[</span><span class="nx">like</span><span class="p">,</span> <span class="nx">setlike</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([</span><span class="dl">"</span><span class="s2">안녕</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2"> 뭐해</span><span class="dl">"</span><span class="p">]);</span>

<span class="p">{</span>
  <span class="o">&lt;</span><span class="nx">div</span>
    <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">setlike</span><span class="p">((</span><span class="nx">like</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">잘가</span><span class="dl">"</span><span class="p">));</span>
    <span class="p">}}</span>
  <span class="o">&gt;</span>
    <span class="p">{</span><span class="nx">like</span><span class="p">}</span>
  <span class="o">&lt;</span><span class="sr">/div&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>버튼을 누르면 배열의 2번 인덱스에 값을 넣어줘 라고 명령한것같은데 버튼을 누르면 ‘잘가’라고 바뀐다. 초기값들이 없어진것이다.</p>

<blockquote>
  <p>ex) 올바른 사용법</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="p">[</span><span class="nx">like</span><span class="p">,</span> <span class="nx">setlike</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([</span><span class="dl">"</span><span class="s2">안녕</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2"> 뭐해</span><span class="dl">"</span><span class="p">]);</span>

<span class="p">{</span>
  <span class="o">&lt;</span><span class="nx">div</span>
    <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="kd">let</span> <span class="nx">copy</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">like</span><span class="p">];</span>
      <span class="nx">copy</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">"</span><span class="s2"> 잘가</span><span class="dl">"</span><span class="p">);</span>
      <span class="nx">setlike</span><span class="p">(</span><span class="nx">copy</span><span class="p">);</span>
    <span class="p">}}</span>
  <span class="o">&gt;</span>
    <span class="p">{</span><span class="nx">like</span><span class="p">}</span>
  <span class="o">&lt;</span><span class="sr">/div&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>전개연산자를 통해 배열을 deepCopy해주었고 copy에 값을 넣어 그것을 set해주었다. // 안녕 뭐해 잘가</p>

<p><br /></p>
<hr />

<blockquote>
  <p>ex) 참조타입(배열의 요소에 참조타입이 있을경우)의 잘못된 사용법</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="p">[</span><span class="nx">like</span><span class="p">,</span> <span class="nx">setlike</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([{</span><span class="dl">"</span><span class="s2">안녕</span><span class="dl">"</span><span class="p">,</span><span class="mi">1</span><span class="p">},</span> <span class="p">{</span><span class="dl">"</span><span class="s2"> 뭐해</span><span class="dl">"</span><span class="p">,</span><span class="mi">2</span><span class="p">}]);</span>

<span class="p">{</span>
  <span class="o">&lt;</span><span class="nx">div</span>
    <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="kd">let</span> <span class="nx">copy</span> <span class="o">=</span> <span class="p">[...</span><span class="nx">like</span><span class="p">];</span>
      <span class="nx">copy</span><span class="p">,</span><span class="nx">push</span><span class="p">({</span><span class="dl">"</span><span class="s2">goodbye</span><span class="dl">"</span><span class="p">});</span>
      <span class="nx">setlike</span><span class="p">(</span><span class="nx">copy</span><span class="p">);</span>
    <span class="p">}}</span>
  <span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="sr">/div&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>배열의 요소로 참조타입이 있을경우 전개연산자로 copy하는 방법은 올지않다. 배열의 바깥부분만 copy되어 얕은복사가 된다.</p>

<blockquote>
  <p>ex) 올바른 사용법</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="p">[</span><span class="nx">like</span><span class="p">,</span> <span class="nx">setlike</span><span class="p">]</span> <span class="o">=</span> <span class="nx">useState</span><span class="p">([{</span><span class="dl">"</span><span class="s2">안녕</span><span class="dl">"</span><span class="p">,</span><span class="mi">1</span><span class="p">},</span> <span class="p">{</span><span class="dl">"</span><span class="s2"> 뭐해</span><span class="dl">"</span><span class="p">,</span><span class="mi">2</span><span class="p">}]);</span>

<span class="p">{</span>
  <span class="o">&lt;</span><span class="nx">div</span>
    <span class="nx">onClick</span><span class="o">=</span><span class="p">{()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="kd">let</span> <span class="nx">deepcopy</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">like</span><span class="p">));</span>
      <span class="nx">deepcopy</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">"</span><span class="s2"> 잘가</span><span class="dl">"</span><span class="p">);</span>
      <span class="nx">setlike</span><span class="p">(</span><span class="nx">copy</span><span class="p">);</span>
    <span class="p">}}</span>
  <span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="sr">/div&gt;</span><span class="err">;
</span><span class="p">}</span>
</code></pre></div></div>

<p>배열을 string으로 바꾸고 그값을 다시 Object로 바꾸는 과정에서 모든 값들이 기존 레퍼런스와 끊겨 새로운 레퍼런스를 생성하기에 완벽한 deepcopy라 볼 수 있다.</p>

<p><br /></p>
<hr />

<center class="notice--info">📗 얕은 복사: 레퍼런스를 공유함</center>

<center class="notice--info">📗 깊은 복사: 아예 새로운 레퍼런스를 가짐</center>

<blockquote>
  <p>깊은 복사 1 : JSON.parse(JSON.stringify()) 사용 // 단점 - 함수가들어간 Object는 사용x</p>
</blockquote>

<blockquote>
  <p>깊은 복사 2 : lodash(_) 라이브러리 사용</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">original</span> <span class="o">=</span> <span class="p">{</span> <span class="na">a</span><span class="p">:</span> <span class="p">{</span> <span class="na">b</span><span class="p">:</span> <span class="mi">2</span> <span class="p">}</span> <span class="p">};</span>
<span class="kd">let</span> <span class="nx">copy</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">cloneDeep</span><span class="p">(</span><span class="nx">original</span><span class="p">);</span>
<span class="nx">copy</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">original</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">);</span> <span class="c1">//2</span>
</code></pre></div></div>

<blockquote>
  <p>깊은 복사 3 : 커스텀 재귀함수</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">cloneObject</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">clone</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">==</span> <span class="dl">"</span><span class="s2">object</span><span class="dl">"</span> <span class="o">&amp;&amp;</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">!=</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">clone</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">cloneObject</span><span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">]);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">clone</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">clone</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<center><p style="color:seagreen">머리아프지않게 lodash라이브러리를 애용하자.</p></center>
:ET